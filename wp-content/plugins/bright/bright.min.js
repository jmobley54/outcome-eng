if(!Array.prototype.forEach){Array.prototype.forEach=function(d,c){for(var b=0,a=this.length;b<a;++b){d.call(c,this[b],b,this)}}}if(!Object.keys){Object.keys=(function(){var c=Object.prototype.hasOwnProperty,d=!({toString:null}).propertyIsEnumerable("toString"),b=["toString","toLocaleString","valueOf","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","constructor"],a=b.length;return function(g){if(typeof g!=="object"&&(typeof g!=="function"||g===null)){throw new TypeError("Object.keys called on non-object")}var e=[],h,f;for(h in g){if(c.call(g,h)){e.push(h)}}if(d){for(f=0;f<a;f++){if(c.call(g,b[f])){e.push(b[f])}}}return e}}())}var Bright={updateRegistrationMeta:function(a,b){b.api_key=Bright.token;jQuery.ajax({url:Bright.url()+Bright.getController("registration/"+a.registration_guid+"/gcustom"),data:b,dataType:"jsonp",success:function(c){Bright.log("in gcustom callback")}})},first_name:function(){return jQuery("meta[name=bright-first-name]").attr("content")},last_name:function(){return jQuery("meta[name=bright-last-name]").attr("content")},redirectedFromLaunch:false,removeURIParameter:function(d,e){var a;if(d&&d.params){a=d.protocol+"://"+d.host;if(d.port){a+=":"+d.port}a+=d.path;delete d.params[e];if(Object.keys(d.params).length>0){a+="?";var c=0;for(var b in d.params){if(c++!=0){a+="&"}a+=b+"="+d.params[b]}}}return a},parseURL:function(c){var b=document.createElement("a");b.href=c;return{source:c,protocol:b.protocol.replace(":",""),host:b.hostname,port:b.port,query:b.search,params:(function(){var e={},d=b.search.replace(/^\?/,"").split("&"),a=d.length,f=0,g;for(;f<a;f++){if(!d[f]){continue}g=d[f].split("=");e[g[0]]=g[1]}return e})(),file:(b.pathname.match(/\/([^\/?#]+)$/i)||[,""])[1],hash:b.hash.replace("#",""),path:b.pathname.replace(/^([^\/])/,"/$1"),relative:(b.href.match(/tps?:\/\/[^\/]+(.+)/)||[,""])[1],segments:b.pathname.replace(/^\//,"").split("/")}},canCallApi:function(){Bright.log("Bright.token returns: "+Bright.token());Bright.log("Bright.url returns: "+Bright.url());return true},courseData:{},courseList:{},courseListTemplates:{},setCourseListTemplate:function(a,b){if(typeof(Bright.courseListTemplates)=="undefined"){Bright.courseListTemplates={}}Bright.courseListTemplates[a]=b},getCourseList:function(){if(typeof(Bright.courseList.records)=="undefined"){return Bright.courseList}return Bright.courseList.records},courseListBox:function(b){if(Bright.courseListTemplates[b].isRendered){Bright.log("courselist template already rendered for id: "+b+". Skipping...");return}var i="courselist";Bright.log("Bright.courseListBox called with id: "+b);var h=Bright.courseListTemplates[b].embedClass;var n=Bright.courseListTemplates[b].embedLocale;var g=Bright.courseListTemplates[b].embedAttributes;var l=Bright.courseListTemplates[b].pageAttributes;var q=Bright.courseListTemplates[b].userAttributes;var p=Bright.courseListTemplates[b].customData;var m=Bright.courseListTemplates[b].template;var j=Bright.decodePhpRawEncode(m);var e="bright-"+i+"-"+b;var c=Bright.getContainer(i,b);Bright.log("templateCode is "+j);var o=Handlebars.compile(j);try{var f;var a={courses:Bright.getCourseList(),attributes:g,page:l,user:q,custom:p,containerId:b};Bright.evaluateJsonStringField(a,"attributes");Bright.evaluateJsonStringField(a,"page");Bright.evaluateJsonStringField(a,"user");Bright.evaluateJsonStringField(a,"custom");if(a.attributes&&a.attributes.refresh){var k=a.attributes.refresh;Bright.setupRefresh({fn:Bright.courseListBox,type:"courselist",id:b,timevalue:k})}f=o(a);Bright.log("html is "+f);c.html(f)}catch(d){c.html("We are sorry but Bright cannot render your template.<br/><br/>An error follows:<br/><pre>"+d.stack+"</pre>Typically this is a coding error and should be repaired (if you are a developer) or reported to your site system administrator (if you are a user).<br/>")}Bright.courseListTemplates[b].isRendered=true},decodePhpRawEncode:function(a){return decodeURIComponent(a)},hooks:{},addHook:function(c,b,a){if(typeof(Bright.hooks[c])=="undefined"){Bright.hooks[c]=[]}Bright.hooks[c].push({fn:b,priority:a})},runHook:function(a){if(Bright.hooks[a]){Bright.hooks[a].forEach(function(b){b.fn()})}},evaluateJsonStringField:function(object,field){if(typeof(object[field])!="undefined"&&object[field]!=""){Bright.log("evaluating json of "+object[field]);try{object[field]=eval("("+object[field]+")")}catch(err){Bright.log(err.stack)}}},fetchCourseFromCourseList:function(b){var a=_.filter(Bright.getCourseList(),function(c){return c.course_guid==this.courseId},{courseId:b});if(a.length==1){return a[0]}else{return null}},launchBox:function(k){if(!Bright.canCallApi()){Bright.log("Cannot access Bright API");return}if(Bright.launchBoxTemplates[k].isRendered){Bright.log("launchbox template already rendered for id: "+k+". Skipping...");return}Bright.log("Bright.launchBox called with id: "+k);var c=Bright.launchBoxTemplates[k].courseId;var l=Bright.launchBoxTemplates[k].embedLocale;var g=Bright.launchBoxTemplates[k].embedAttributes;var e=Bright.launchBoxTemplates[k].pageAttributes;var a=Bright.launchBoxTemplates[k].userAttributes;var o=Bright.launchBoxTemplates[k].customData;var f=Bright.launchBoxTemplates[k].template;var h=Bright.decodePhpRawEncode(f);var m=Bright.launchBoxTemplates[k].embedClass;var s=m+"-button";var p=m+"-review-button";Bright.setLocale(l);var i="bright-launchbox-"+k;var r=Bright.getLaunchBox(k);r.text(Bright.t("Loading Bright!"));var q=Handlebars.compile(h);Bright.courseData[c].launchbutton='<input type="button" value="'+Bright.t("Launch course")+'" class="'+s+'"/>';Bright.courseData[c].reviewbutton='<input type="button" value="'+Bright.t("Review course")+'" class="'+p+'"/>';if(!typeof Bright.courseData[c].attributes=="undefined"){r.html("A problem occured (error code 1000): Name conflict for attributes")}else{Bright.courseData[c].attributes=g;Bright.courseData[c].page=e;Bright.courseData[c].user=a;Bright.courseData[c].custom=o;Bright.evaluateJsonStringField(Bright.courseData[c],"attributes");Bright.evaluateJsonStringField(Bright.courseData[c],"page");Bright.evaluateJsonStringField(Bright.courseData[c],"user");Bright.evaluateJsonStringField(Bright.courseData[c],"custom");if(Bright.courseData[c].attributes&&Bright.courseData[c].attributes.refresh){var b=Bright.courseData[c].attributes.refresh;Bright.setupRefresh({fn:Bright.launchBox,type:"course",id:k,timevalue:b})}try{r.html(q(Bright.courseData[c]));var n=r.find("."+s).attr("disabled","disabled");var j=r.find("."+p).attr("disabled","disabled");if(n){n.attr("disabled","disabled");n.click(function(){Bright.launch(k)});r.find("."+s).removeAttr("disabled")}if(j){j.attr("disabled","disabled");j.click(function(){Bright.launch(k,true)});r.find("."+p).removeAttr("disabled")}}catch(d){r.html("We are sorry but Bright cannot render your template.<br/><br/>An error follows:<br/><pre>"+d+"</pre>Typically this is a coding error and should be repaired (if you are a developer) or reported to your site system administrator (if you are a user).")}}Bright.launchBoxTemplates[k].isRendered=true},launchBoxTemplates:{},launchCourseFromCourselister:function(e,f,i){if(!Bright.canCallApi()){Bright.log("Cannot access Bright API");return}Bright.log("Bright.launchCourseFromCourselister called with course_guid: "+e+", containerId: "+f);var h="courselist";var c=Bright.getContainerTemplate(h,f);var g=c.find(".embed-class").text();var a=jQuery("#bright-"+h+"-"+f);var b=[];var d=".launchbutton-";if(i){d=".reviewbutton-"}if(a.length==1){b=a.find(d+e)}else{Bright.log("Your courselister template has not exported the Bright containerID into the contect for an individual course.  Because of this, this type of template will not be able to use multiplet times on a single page.  See the bright-learning-paths plugin for an example on how to create a courselister who's launchbuttons can be disabled correctly during the launch sequence");Bright.log("We will see if we can find a single launchbutton for this course.  If so, we will continue.  Otherwise your template will need to be modified to push the containerID into the course context");b=jQuery("input"+d+e)}if(b.length==1){Bright.launchCourseFromLaunchbutton(Bright.fetchCourseFromCourseList(e),e,b,null,i)}else{alert("We are sorry, but your course cannot be launched due to a misconfiguration.  Please contact your site administrator.  Typically this error relates to an error in the course template, and/or the inclusion of that template on a page multiple times.")}},getContainer:function(b,a){return jQuery("#bright-"+b+"-"+a)},getController:function(b){var a=2;if(Bright.url().match(/v1/)){a=1}if(a==1){return"/scorm_cloud_"+b}else{return"/"+b}},getErrorDiv:function(b,a){return jQuery("#bright-"+b+"-"+a+"-error")},getLaunchBoxErrorDiv:function(a){return Bright.getErrorDiv("launchbox",a)},getLaunchBox:function(a){return Bright.getContainer("launchbox",a)},getContainerTemplate:function(b,a){return jQuery("#bright-"+b+"-template-"+a)},getLaunchBoxTemplate:function(a){return Bright.getContainerTemplate("launchbox",a)},helper:function(a,b){Handlebars.registerHelper(a,b)},lang:{},launchCourseFromLaunchbutton:function(b,g,c,f,e){var d="";var a="";if(e){a="true"}if(b.registration){d=b.registration.registration_guid}if(d.length==0){c.attr({disabled:"disabled",value:Bright.t("Retrieving launch registration and URL ...")});jQuery.ajax({url:Bright.url()+Bright.getController("registration/gcreate"),data:{dont_duplicate:"1",api_key:Bright.token,course_guid:g,fname:Bright.first_name(),lname:Bright.last_name(),format:"json"},dataType:"jsonp",success:function(h){Bright.log("in gcreate callback");if(h.error_code){c.attr({disabled:"enabled",value:Bright.t(h.error_message)})}else{if(h.registration_guid){d=h.registration_guid;Bright.log("Retrived registration ID "+d)}else{Bright.log("Odd no regid");c.attr({disabled:"enabled",value:Bright.t("Something went wrong [no reg id], try again?")})}if(h.id){Bright.launch_from_url({launchButton:c,review:a,regId:d,courseData:b})}else{Bright.log("Odd no bright ID");c.attr({disabled:"enabled",value:Bright.t("Something went wrong [no bright id], try again?")})}}}})}else{Bright.launch_from_url({launchButton:c,review:a,regId:d,courseData:b})}},launch:function(h,a){var e=Bright.getLaunchBoxErrorDiv(h);var d=Bright.launchBoxTemplates[h].embedClass;var f=d+"-button";if(a){f=d+"-review-button"}var c=Bright.getLaunchBox(h).find("."+f);var b=Bright.launchBoxTemplates[h].courseLocale;Bright.setLocale(b);var g=Bright.launchBoxTemplates[h].courseId;Bright.launchCourseFromLaunchbutton(Bright.courseData[g],g,c,null,a)},launch_from_url:function(e){var c=e.launchButton;var d=e.regId;var b=e.courseData;var a=e.review;c.attr({disabled:"disabled",value:Bright.t("Retrieving launch URL...")});Bright.log("retrieving launch URL for "+d);var f={format:"json",api_key:Bright.token,review:a,redirect_url:window.location.href,launching:1};if(b&&b.attributes&&b.attributes.autotag&&b.page&&b.page.categories){f.tags=_.collect(b.page.categories,function(g){return g.name}).join(",")}jQuery.ajax({url:Bright.url()+Bright.getController("registration/")+d+"/launch_url",data:f,dataType:"jsonp",success:function(g){Bright.log("Retrieved launch url: "+g.launch_url);c.attr({value:Bright.t("Launching course...")});window.location=g.launch_url}})},load:function(){Bright.refreshLock=false;Bright.preProcessCourseData();if(Bright.launchBoxTemplates){jQuery.each(Bright.launchBoxTemplates,function(b,a){Bright.launchBox(b)})}if(Bright.courseListTemplates){jQuery.each(Bright.courseListTemplates,function(b,a){Bright.courseListBox(b)})}Bright.runHook("after_load")},log:function(a){if(Bright.verbose){if(typeof console!="undefined"){console.log(a)}}},preProcessCourseDataForCourse:function(courseId){var course=Bright.courseData[courseId];if(course){if(course.registrations){if(course.registrations.length>1){course.registration=_.sortBy(course.registrations,function(c){return c.provider_created_at}).reverse()[0]}else{course.registration=course.registrations[0]}course.registrations.forEach(function(registration){if(registration){if(registration.custom){try{registration.custom=eval("("+registration.custom+")")}catch(err){Bright.log(err)}}}})}if(course.custom){try{course.custom=eval("("+course.custom+")")}catch(err){Bright.log(err)}}if(course.metadata){try{course.metadata=eval("("+course.metadata+")")}catch(err){Bright.log(err)}}}},preProcessCourseData:function(){if(typeof(bright_courses)!="undefined"){Bright.setCourseData(bright_courses);for(courseId in Bright.courseData){Bright.preProcessCourseDataForCourse(courseId)}}if(typeof(bright_courselist)!="undefined"){Bright.setCourseList(bright_courselist);Bright.getCourseList().forEach(function(course){if(course.registrations){for(var i=0,l=course.registrations.length;i<l;++i){if(course.registrations[i].records){course.registrations[i]=course.registrations[i].records}}var length=course.registrations.length;if(length>1){course.registration=_.sortBy(course.registrations,function(c){return c.provider_created_at}).reverse()[0]}else{course.registration=course.registrations[0]}course.registrations.forEach(function(registration){if(registration){if(registration.custom){try{registration.custom=eval("("+registration.custom+")")}catch(err){Bright.log(err)}}}})}if(course.custom){try{course.custom=eval("("+course.custom+")")}catch(err){Bright.log(err)}}if(course.metadata){try{course.metadata=eval("("+course.metadata+")")}catch(err){Bright.log(err)}}})}},setCourseData:function(a){Bright.courseData=a},setCourseList:function(a){Bright.courseList=a},setLocale:function(a){if(!a){a=jQuery("html").attr("lang")}Bright.log("Setting Bright locale to "+a);if(Bright.lang[a]){jQuery.i18n.setDictionary(Bright.lang[a])}},refreshLock:false,reload:function(c,b){var a=jQuery.extend(true,{},b);if(c=="course"){Bright.log("nothing yet....")}else{if(c=="courselist"){a.api_key=Bright.token();a.include_registrations=1;jQuery.ajax({url:Bright.url()+"/course",data:a,dataType:"jsonp",success:function(d){bright_courselist=d;Bright.preProcessCourseData();Bright.log("in ajax callback")}})}}},setupRefresh:function(b){var d=b.type;var f=b.id;var e=b.timevalue;var c=b.fn;var a=b.refreshArgs;setTimeout(function(){if(Bright.refreshLock!=true){Bright.refreshLock=true;try{Bright.reload(d,a);c(f);Bright.runHook("after_refresh")}catch(g){Bright.refreshLock=false;Bright.log(g)}}Bright.refreshLock=false},e)},token:function(){return jQuery("meta[name=bright-token]").attr("content")},apiKey:function(){return Bright.token()},t:function(a){return jQuery.i18n._(a)},url:function(){return jQuery("meta[name=bright-api-url]").attr("content")},verbose:true};jQuery(document).ready(function(){var b=Bright.parseURL(window.location.href);if(b.params&&b.params.bright_redirect_from_launch){Bright.redirectedFromLaunch=true;var a=b.params.bright_redirect_from_launch;if(a){jQuery.ajax({url:Bright.url()+Bright.getController("registration"),data:{registration_guid:a,api_key:Bright.token,crawl:"t",format:"json"},dataType:"jsonp",success:function(){var c=Bright.removeURIParameter(b,"bright_redirect_from_launch");if(c){c+=((c.indexOf("?")!=-1)?"&":"?")+"bright_registration_refreshed=t";if(window.location.replace){window.location.replace(c)}else{window.location=c}}},error:function(e,c,d){if(e.responseText){alert(e.responseText)}else{alert("error E1094 in request: "+d+".  Please contact your system adminstrator or support.")}}})}else{Bright.load()}}else{Bright.load()}});Bright.addHook("after_load",function(){setTimeout(function(){jQuery.each(Bright.launchBoxTemplates,function(id,template){var arguments=eval("("+template.embedAttributes+")");if(arguments.auto_launch){var uriparse=Bright.parseURL(window.location.href);if((uriparse.params&&(uriparse.params.bright_redirect_from_launch||uriparse.params.bright_registration_refreshed))){1}else{jQuery("div#bright-launchbox-"+id+' input[type="button"]').click()}}})},1)});Bright.helper("rightnow",function(a){return new Date().toString()});Bright.helper("fetchforcourse",function(b,a){var d=Bright.fetchCourseFromCourseList(b);return d[a.hash.field]});Bright.var_dump=function(e,c,a){names=Object.getOwnPropertyNames(e);c+="{<br/>";for(var d=0;d<names.length;d++){for(var b=0;b<=a;b++){c+="&nbsp;&nbsp;"}c+='"'+names[d]+'": "';if(e[names[d]]){if(e[names[d]].toString()=="[object Object]"){c+=Bright.var_dump(e[names[d]],"",a+1)}else{c+=e[names[d]]}}else{c+='""'}c+='",';c+="<br/>"}for(var d=0;d<a;d++){c+="&nbsp;&nbsp;"}c+="}<br/>";return c};Bright.helper("dump",function(b,a){return Bright.var_dump(b,"",0)});Bright.helper("first",function(d,b){var a="";var e=b.hash.up_to||1;for(var c=0;c<=(e-1);c++){if(typeof(d)!="undefined"&&typeof(d[c])!="undefined"){a+=b.fn(d[c])}else{a+=b.inverse(d)}}return a});